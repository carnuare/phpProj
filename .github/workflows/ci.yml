name: CI PHPUnit and Puppeteer

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php-unit-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [7.4]
        dependency-version: [prefer-stable]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - run: composer update
    - run: composer install # or alternative dependency management
    - run: echo "Running PHPUnit tests..."
    - run: phpunit ./src/tests/phpunit/
  puppeteer:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [7.4]
        dependency-version: [prefer-stable]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - uses: mirromutth/mysql-action@v1.1
        with:
          character set server: 'utf8' 
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql database: 'assignment_tracker' # Optional, default value is "test". The specified database which will be create
          mysql root password: 'example' # Required if "mysql user" is empty, default is empty. The root superuser password
    - run: composer update
    - run: composer install
    - run: .github/workflows/installDB.sh
    - run: |
        echo "Running docker-compose"
        docker-compose up -d
        echo "Running Puppeteer tests..."
        npm install puppeteer
        cd src/tests
        node puppeteer/example.js
      #es importante hacer el node desde la carpeta tests porque si no, el tests no coge bien la ruta para guardar las screenshots